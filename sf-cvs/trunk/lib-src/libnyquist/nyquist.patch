diff -wruN orig/nyquist/nyqsrc/falloc.c nyquist/nyqsrc/falloc.c
--- orig/nyquist/nyqsrc/falloc.c	2006-05-14 09:33:21.000000000 -0500
+++ nyquist/nyqsrc/falloc.c	2009-02-25 21:16:10.000000000 -0600
@@ -30,10 +30,20 @@
 
 
 /* memory pool */
-char *poolp = NULL;
-char *poolend = NULL;
+char *poolp;
+char *poolend;
+
+/* sample block memory pool */
+char *spoolp;
+char *spoolend;
+
 int npools = 0;
 
+#if defined(TRACK_POOLS) && TRACK_POOLS
+#define POOL_HEAD_SIZE (round_size(sizeof(CQUE)))
+CQUE *pools = NULL;
+#endif
+
 void sound_already_free_test(s)
   sound_type s;
 {
@@ -53,16 +63,44 @@
 void new_pool(void)
 {
     poolp = (char *) malloc(MAXPOOLSIZE);
+
     if (poolp == NULL) {
         fprintf(STDERR, "fugue: out of memory!\n");
         EXIT(1);
     }
+
     poolend = poolp + MAXPOOLSIZE;
     npools++;
     /* stick to double word boundaries */
     poolp = (char *) round_size(((long) poolp));
 }
 
+/* new_pool -- allocate a new pool from which mem is allocated */
+/**/
+void new_spool(void)
+{
+#if defined(TRACK_POOLS) && TRACK_POOLS
+    spoolp = (char *) malloc(MAXSPOOLSIZE + POOL_HEAD_SIZE);
+#else
+    spoolp = (char *) malloc(MAXSPOOLSIZE);
+#endif
+
+    if (spoolp == NULL) {
+        fprintf(STDERR, "fugue: out of memory!\n");
+        EXIT(1);
+    }
+
+#if defined(TRACK_POOLS) && TRACK_POOLS
+    Qenter(pools, spoolp);
+    spoolp += POOL_HEAD_SIZE;
+#endif
+
+    spoolend = spoolp + MAXSPOOLSIZE;
+    npools++;
+    /* stick to double word boundaries */
+    spoolp = (char *) round_size(((long) spoolp));
+}
+
 
 /* find_sample_block -- get sample block when freelist is empty */
 /* Try these strategies in order:
@@ -78,10 +116,10 @@
 {	
     sample_block_type sp;
     if (sample_block_total < sample_block_low_water + BLOCKS_PER_GC &&
-        check_pool(round_size(sizeof(sample_block_node)))) {
-        if (DEBUG_MEM) poolp += DEBUG_MEM_INFO_SIZE;
-        sp = (sample_block_type) poolp;
-        poolp += round_size(sizeof(sample_block_node));
+        check_spool(round_size(sizeof(sample_block_node)))) {
+        if (DEBUG_MEM) spoolp += DEBUG_MEM_INFO_SIZE;
+        sp = (sample_block_type) spoolp;
+        spoolp += round_size(sizeof(sample_block_node));
         sample_block_total++;
 /*	printf("fp%d ", sample_block_total - sample_block_low_water); */
     } else {
@@ -91,19 +129,19 @@
         if (!Qempty(sample_block_free)) {
             Qget(sample_block_free, sample_block_type, sp);
 /*	    printf("gc, then from freelist\n"); */
-        } else if (check_pool(round_size(sizeof(sample_block_node)))) {
-            if (DEBUG_MEM) poolp += DEBUG_MEM_INFO_SIZE;
-            sp = (sample_block_type) poolp;
-            poolp += sizeof(sample_block_node);
+        } else if (check_spool(round_size(sizeof(sample_block_node)))) {
+            if (DEBUG_MEM) spoolp += DEBUG_MEM_INFO_SIZE;
+            sp = (sample_block_type) spoolp;
+            spoolp += round_size(sizeof(sample_block_node));
             sample_block_total++;
-/*	    printf("gc, then from pool\n"); */
+/*	    printf("gc, then from spool\n"); */
         } else {
-            new_pool();
-            if (DEBUG_MEM) poolp += DEBUG_MEM_INFO_SIZE;
-            sp = (sample_block_type) poolp;
-            poolp += round_size(sizeof(sample_block_node));
+            new_spool();
+            if (DEBUG_MEM) spoolp += DEBUG_MEM_INFO_SIZE;
+            sp = (sample_block_type) spoolp;
+            spoolp += round_size(sizeof(sample_block_node));
             sample_block_total++;
-/*	    printf("gc, then new pool\n"); */
+/*	    printf("gc, then new spool\n"); */
         }
     }
     return sp;
@@ -124,3 +162,94 @@
 }
 
 
+#if defined(TRACK_POOLS) && TRACK_POOLS
+
+/* falloc_gc -- return empty pools to the system */
+/**/
+void falloc_gc()
+{
+   CQUE *lp = NULL;
+   CQUE *cp;
+   CQUE *np;
+   CQUE *tlist = NULL;
+
+   /* Scan all allocated pools */
+   for (cp = pools; cp; lp = cp, cp = np) {
+      char *str = ((char *)cp) + POOL_HEAD_SIZE;
+      char *end = str + MAXSPOOLSIZE;
+      long tsiz = end - str;
+      long csiz = 0;
+      CQUE *tsave = NULL;
+      CQUE *ln = NULL;
+      CQUE *cn;
+      CQUE *nn;
+
+      /* Save pointer to next pool */
+      np = cp->qnext;
+
+      /* Remember head of temp free list */
+      tsave = tlist;
+
+      /* Scan all nodes on the free list */
+      for (cn = sample_block_free; cn; ln = cn, cn = nn) {
+
+         /* Get next node */
+         nn = cn->qnext;
+
+         /* Count it if the node belongs to this pool */
+         if (cn >= (CQUE *) str && cn <= (CQUE *) end) {
+            csiz += round_size(sizeof(sample_block_node));
+
+            Qenter(tlist, cn);
+
+            /* Unlink the node */
+            if (cn == sample_block_free) {
+               sample_block_free = nn;
+               cn = NULL;
+            }
+            else {
+               ln->qnext = nn;
+               cn = ln;
+            }
+         }
+      }
+
+      /* The pool had inuse nodes */
+      if (csiz != tsiz) {
+         continue;
+      }
+   
+      /* Remove the nodes from the temp free list */
+      tlist = tsave;
+
+      /* Maintain stats */
+      sample_block_total -= (tsiz / round_size(sizeof(sample_block_node)));
+      npools--;
+
+      /* If this is the active pool, then reset current pointers */
+      if (spoolp >= str && spoolp <= end) {
+         spoolp = NULL;
+         spoolend = NULL;
+      }
+
+      /* Release the pool to the system */
+      free(cp);
+
+      /* Unlink this pool from the list */
+      if (cp == pools) {
+         pools = np;
+         cp = NULL;
+      }
+      else {
+         lp->qnext = np;
+         cp = lp;
+      }
+   }
+
+   /* Resave list of free nodes */
+   sample_block_free = tlist;
+}
+
+#endif
+
+
diff -wruN orig/nyquist/nyqsrc/falloc.h nyquist/nyqsrc/falloc.h
--- orig/nyquist/nyqsrc/falloc.h	2004-11-10 10:07:38.000000000 -0600
+++ nyquist/nyqsrc/falloc.h	2009-03-01 01:17:00.000000000 -0600
@@ -73,15 +73,31 @@
 #define MAXLISTS 128
 extern CQUE *generic_free[MAXLISTS];
 
-/* memory pool */
+/* general memory pool */
 #define MAXPOOLSIZE 1000000
 extern char *poolp;
 extern char *poolend;
+
+/* sample block memory pool */
+#define MAXSPOOLSIZE (256 * round_size(sizeof(sample_block_node)))
+extern char *spoolp;
+extern char *spoolend;
+
 extern int npools;
 extern int sample_blocks_since_gc;
 
+#if !defined(TRACK_POOLS)
+#define TRACK_POOLS 1
+#endif
+
+#if defined(TRACK_POOLS) && TRACK_POOLS
+extern CQUE *spools;
+void falloc_gc();
+#endif
+
 void falloc_init(void);
 void new_pool(void);
+void new_spool(void);
 sample_block_type find_sample_block(void);
 
 char *get_from_pool(size_t siz);
@@ -91,8 +107,16 @@
 /* check_pool -- returns true if enough bytes are available */
 #if DEBUG_MEM
 #define check_pool(size) (poolp + (size) + DEBUG_MEM_INFO_SIZE <= poolend)
+#define check_spool(size) (spoolp + (size) + DEBUG_MEM_INFO_SIZE <= spoolend)
+#define DBG_MEM_ALLOCATED(p, who) dbg_mem_allocated(p, who)
+#define DBG_MEM_FREED(p, who) dbg_mem_freed(p, who)
+#define DBG_MEM_RELEASED(p, who) dbg_mem_released(p, who)
 #else
 #define check_pool(size) (poolp + (size) <= poolend)
+#define check_spool(size) (spoolp + (size) <= spoolend)
+#define DBG_MEM_ALLOCATED(p, who)
+#define DBG_MEM_FREED(p, who)
+#define DBG_MEM_RELEASED(p, who)
 #endif
 
 #define BLOCKS_PER_GC 100
@@ -103,7 +127,7 @@
     else sp = find_sample_block(); \
     /* sample_block_test(sp, "falloc_sample_block"); */ \
     /* printf("[%x] ", sp); */ \
-    if (DEBUG_MEM) dbg_mem_allocated(sp, who); \
+    DBG_MEM_ALLOCATED(sp, who); \
     sp->refcnt = 1; \
     sample_block_used++; \
 }
@@ -111,15 +135,14 @@
 
 #define ffree_sample_block(sp, who) { \
     /* printf("freeing sample_block@%x\n", sp); */ \
-    if (DEBUG_MEM) dbg_mem_freed(sp, who); \
+    DBG_MEM_FREED(sp, who); \
     Qenter(sample_block_free, sp); \
     sample_block_used--; \
 }
 
-
 #define frelease_sample_block(sp, who) { \
     sp->refcnt--; \
-    if (DEBUG_MEM) dbg_mem_released(sp, who); \
+    DBG_MEM_RELEASED(sp, who); \
     if (sp->refcnt <= 0) { \
         ffree_sample_block(sp); \
     } \
@@ -138,12 +161,12 @@
     else \
         sp = (snd_list_type)get_from_pool(round_size(sizeof(snd_list_node)));\
     snd_list_used++; \
-    if (DEBUG_MEM) dbg_mem_allocated(sp, who); \
+    DBG_MEM_ALLOCATED(sp, who); \
 }
 
 
 #define ffree_snd_list(sp, who) { \
-    if (DEBUG_MEM) dbg_mem_freed(sp, who); \
+    DBG_MEM_FREED(sp, who); \
     Qenter(snd_list_free, sp); \
     snd_list_used--; \
 }
@@ -151,7 +174,7 @@
 
 #define frelease_snd_list(sp, who) { \
     sp->refcnt--; \
-    if (DEBUG_MEM) dbg_mem_released(sp, who); \
+    DBG_MEM_RELEASED(sp, who); \
     if (sp->refcnt <= 0) { \
         ffree_snd_list(sp, who); \
     } \
@@ -169,7 +192,7 @@
         sp = (sound_type) get_from_pool(round_size(sizeof(sound_node))); \
     } \
     sound_used++; \
-    if (DEBUG_MEM) dbg_mem_allocated(sp, who); \
+    DBG_MEM_ALLOCATED(sp, who); \
 }
 #else
 #define falloc_sound(sp) \
@@ -180,7 +203,7 @@
 /* note: usually you call sound_unref, not this macro */
 #define ffree_sound(sp, who) { \
 /*    sound_already_free_test(); */ \
-    if (DEBUG_MEM) dbg_mem_freed(sp, who); \
+    DBG_MEM_FREED(sp, who); \
     Qenter(sound_free, sp); \
     sound_used--; \
 }
@@ -208,7 +231,7 @@
     } else { \
         sp = (sptype *) get_from_pool(size); \
     } \
-    if (DEBUG_MEM) dbg_mem_allocated(sp, who); \
+    DBG_MEM_ALLOCATED(sp, who); \
 /*    printf("GENERIC ALLOC %x\n", sp);  */
 
 
@@ -220,7 +243,7 @@
  */
 #define ffree_generic(sp, nn, who) { \
     int sIzE = round_size(nn) >> 3; \
-    if (DEBUG_MEM) dbg_mem_freed(sp, who); \
+    DBG_MEM_FREED(sp, who); \
     /* printf("GENERIC FREE %x SIZE %d\n", sp, nnn); */ \
     if ((sIzE) >= MAXLISTS) { \
         free(sp); \
diff -wruN orig/nyquist/nyqsrc/sound.c nyquist/nyqsrc/sound.c
--- orig/nyquist/nyqsrc/sound.c	2008-07-20 23:30:05.000000000 -0500
+++ nyquist/nyqsrc/sound.c	2009-02-25 09:08:55.000000000 -0600
@@ -17,7 +17,9 @@
 #include "extern.h"
 #include "debug.h"
 #include "assert.h"
+#ifdef OSC
 #include "nyq-osc-server.h"
+#endif
 #include "cext.h"
 #include "userio.h"
 
@@ -1085,8 +1087,10 @@
     /* this should never happen */
     if (*cnt == 0) {
         stdputstr("SND_get_first returned 0 samples\n");
+#if DEBUG_MEM
         dbg_mem_print("snd_list info:", snd_list);
         dbg_mem_print("block info:", snd_list->block);
+#endif
         sound_print_tree(snd);
         stdputstr("It is possible that you created a recursive sound\n");
         stdputstr("using something like: (SETF X (SEQ (SOUND X) ...))\n");
diff -wruN orig/nyquist/nyqstk/include/ADSR.h nyquist/nyqstk/include/ADSR.h
--- orig/nyquist/nyqstk/include/ADSR.h	2008-01-07 09:59:27.000000000 -0600
+++ nyquist/nyqstk/include/ADSR.h	2009-01-29 12:04:22.000000000 -0600
@@ -20,6 +20,9 @@
 
 #include "Envelope.h"
 
+namespace Nyq
+{
+
 class ADSR : public Envelope
 {
  public:
@@ -82,4 +85,6 @@
   StkFloat releaseRate_;
 };
 
+} // namespace Nyq
+
 #endif
diff -wruN orig/nyquist/nyqstk/include/BandedWG.h nyquist/nyqstk/include/BandedWG.h
--- orig/nyquist/nyqstk/include/BandedWG.h	2008-01-07 09:59:27.000000000 -0600
+++ nyquist/nyqstk/include/BandedWG.h	2009-01-29 12:04:22.000000000 -0600
@@ -32,14 +32,22 @@
 #ifndef STK_BANDEDWG_H
 #define STK_BANDEDWG_H
 
+namespace Nyq
+{
+
 const int MAX_BANDED_MODES = 20;
 
+} // namespace Nyq
+
 #include "Instrmnt.h"
 #include "DelayL.h"
 #include "BowTable.h"
 #include "ADSR.h"
 #include "BiQuad.h"
 
+namespace Nyq
+{
+
 class BandedWG : public Instrmnt
 {
  public:
@@ -108,4 +116,6 @@
 
 };
 
+} // namespace Nyq
+
 #endif
diff -wruN orig/nyquist/nyqstk/include/BiQuad.h nyquist/nyqstk/include/BiQuad.h
--- orig/nyquist/nyqstk/include/BiQuad.h	2008-01-07 09:59:27.000000000 -0600
+++ nyquist/nyqstk/include/BiQuad.h	2009-01-29 12:04:22.000000000 -0600
@@ -17,6 +17,9 @@
 
 #include "Filter.h"
 
+namespace Nyq
+{
+
 class BiQuad : protected Filter
 {
 public:
@@ -109,4 +112,6 @@
   virtual StkFloat computeSample( StkFloat input );
 };
 
+} // namespace Nyq
+
 #endif
diff -wruN orig/nyquist/nyqstk/include/BowTable.h nyquist/nyqstk/include/BowTable.h
--- orig/nyquist/nyqstk/include/BowTable.h	2008-01-07 09:59:27.000000000 -0600
+++ nyquist/nyqstk/include/BowTable.h	2009-01-29 12:04:22.000000000 -0600
@@ -14,6 +14,9 @@
 
 #include "Function.h"
 
+namespace Nyq
+{
+
 class BowTable : public Function
 {
 public:
@@ -48,4 +51,6 @@
 
 };
 
+} // namespace Nyq
+
 #endif
diff -wruN orig/nyquist/nyqstk/include/Bowed.h nyquist/nyqstk/include/Bowed.h
--- orig/nyquist/nyqstk/include/Bowed.h	2008-01-07 09:59:28.000000000 -0600
+++ nyquist/nyqstk/include/Bowed.h	2009-01-29 12:04:22.000000000 -0600
@@ -32,6 +32,9 @@
 #include "SineWave.h"
 #include "ADSR.h"
 
+namespace Nyq
+{
+
 class Bowed : public Instrmnt
 {
  public:
@@ -83,4 +86,6 @@
 
 };
 
+} // namespace Nyq
+
 #endif
diff -wruN orig/nyquist/nyqstk/include/Chorus.h nyquist/nyqstk/include/Chorus.h
--- orig/nyquist/nyqstk/include/Chorus.h	2008-01-07 09:59:28.000000000 -0600
+++ nyquist/nyqstk/include/Chorus.h	2009-01-29 12:04:22.000000000 -0600
@@ -15,6 +15,9 @@
 #include "DelayL.h" 
 #include "SineWave.h" 
 
+namespace Nyq
+{
+
 class Chorus : public Effect
 {
  public:
@@ -47,5 +50,7 @@
 
 };
 
+} // namespace Nyq
+
 #endif
 
diff -wruN orig/nyquist/nyqstk/include/Clarinet.h nyquist/nyqstk/include/Clarinet.h
--- orig/nyquist/nyqstk/include/Clarinet.h	2008-01-07 09:30:37.000000000 -0600
+++ nyquist/nyqstk/include/Clarinet.h	2009-01-29 12:04:22.000000000 -0600
@@ -33,6 +33,9 @@
 #include "Noise.h"
 #include "SineWave.h"
 
+namespace Nyq
+{
+
 class Clarinet : public Instrmnt
 {
  public:
@@ -83,4 +86,6 @@
 
 };
 
+} // namespace Nyq
+
 #endif
diff -wruN orig/nyquist/nyqstk/include/Delay.h nyquist/nyqstk/include/Delay.h
--- orig/nyquist/nyqstk/include/Delay.h	2008-01-07 09:30:37.000000000 -0600
+++ nyquist/nyqstk/include/Delay.h	2009-01-29 12:04:22.000000000 -0600
@@ -23,6 +23,9 @@
 
 #include "Filter.h"
 
+namespace Nyq
+{
+
 class Delay : protected Filter
 {
 public:
@@ -106,5 +109,7 @@
   StkFloat delay_;
 };
 
+} // namespace Nyq
+
 #endif
 
diff -wruN orig/nyquist/nyqstk/include/DelayA.h nyquist/nyqstk/include/DelayA.h
--- orig/nyquist/nyqstk/include/DelayA.h	2008-01-07 09:59:28.000000000 -0600
+++ nyquist/nyqstk/include/DelayA.h	2009-01-29 12:04:22.000000000 -0600
@@ -24,6 +24,9 @@
 
 #include "Delay.h"
 
+namespace Nyq
+{
+
 class DelayA : public Delay
 {
 public:
@@ -71,4 +74,6 @@
   bool doNextOut_;
 };
 
+} // namespace Nyq
+
 #endif
diff -wruN orig/nyquist/nyqstk/include/DelayL.h nyquist/nyqstk/include/DelayL.h
--- orig/nyquist/nyqstk/include/DelayL.h	2008-01-07 09:30:37.000000000 -0600
+++ nyquist/nyqstk/include/DelayL.h	2009-01-29 12:04:22.000000000 -0600
@@ -27,6 +27,9 @@
 
 #include "Delay.h"
 
+namespace Nyq
+{
+
 class DelayL : public Delay
 {
 public:
@@ -70,4 +73,6 @@
   bool doNextOut_;
 };
 
+} // namespace Nyq
+
 #endif
diff -wruN orig/nyquist/nyqstk/include/Effect.h nyquist/nyqstk/include/Effect.h
--- orig/nyquist/nyqstk/include/Effect.h	2008-01-07 09:59:28.000000000 -0600
+++ nyquist/nyqstk/include/Effect.h	2009-01-29 12:04:22.000000000 -0600
@@ -14,6 +14,9 @@
 #ifndef STK_EFFECT_H
 #define STK_EFFECT_H
 
+namespace Nyq
+{
+
 class Effect : public Stk
 {
  public:
@@ -65,5 +68,7 @@
 
 };
 
+} // namespace Nyq
+
 #endif
 
diff -wruN orig/nyquist/nyqstk/include/Envelope.h nyquist/nyqstk/include/Envelope.h
--- orig/nyquist/nyqstk/include/Envelope.h	2008-01-07 09:30:37.000000000 -0600
+++ nyquist/nyqstk/include/Envelope.h	2009-01-29 12:04:22.000000000 -0600
@@ -18,6 +18,9 @@
 
 #include "Generator.h"
 
+namespace Nyq
+{
+
 class Envelope : public Generator
 {
  public:
@@ -65,4 +68,6 @@
   int state_;
 };
 
+} // namespace Nyq
+
 #endif
diff -wruN orig/nyquist/nyqstk/include/FileRead.h nyquist/nyqstk/include/FileRead.h
--- orig/nyquist/nyqstk/include/FileRead.h	2008-01-07 09:59:28.000000000 -0600
+++ nyquist/nyqstk/include/FileRead.h	2009-01-29 12:04:22.000000000 -0600
@@ -34,6 +34,9 @@
 
 #include "Stk.h"
 
+namespace Nyq
+{
+
 class FileRead : public Stk
 {
 public:
@@ -121,4 +124,6 @@
   StkFloat fileRate_;
 };
 
+} // namespace Nyq
+
 #endif
diff -wruN orig/nyquist/nyqstk/include/FileWvIn.h nyquist/nyqstk/include/FileWvIn.h
--- orig/nyquist/nyqstk/include/FileWvIn.h	2008-01-07 09:59:28.000000000 -0600
+++ nyquist/nyqstk/include/FileWvIn.h	2009-01-29 12:04:22.000000000 -0600
@@ -37,6 +37,9 @@
 #include "WvIn.h"
 #include "FileRead.h"
 
+namespace Nyq
+{
+
 class FileWvIn : public WvIn
 {
 public:
@@ -140,4 +143,6 @@
 
 };
 
+} // namespace Nyq
+
 #endif
diff -wruN orig/nyquist/nyqstk/include/Filter.h nyquist/nyqstk/include/Filter.h
--- orig/nyquist/nyqstk/include/Filter.h	2008-01-07 09:30:37.000000000 -0600
+++ nyquist/nyqstk/include/Filter.h	2009-01-29 12:04:22.000000000 -0600
@@ -33,6 +33,9 @@
 #include "Stk.h"
 #include <vector>
 
+namespace Nyq
+{
+
 class Filter : public Stk
 {
 public:
@@ -119,4 +122,6 @@
 
 };
 
+} // namespace Nyq
+
 #endif
diff -wruN orig/nyquist/nyqstk/include/Flute.h nyquist/nyqstk/include/Flute.h
--- orig/nyquist/nyqstk/include/Flute.h	2008-01-07 09:59:28.000000000 -0600
+++ nyquist/nyqstk/include/Flute.h	2009-01-29 12:04:22.000000000 -0600
@@ -34,6 +34,9 @@
 #include "ADSR.h"
 #include "SineWave.h"
 
+namespace Nyq
+{
+
 class Flute : public Instrmnt
 {
  public:
@@ -100,4 +103,6 @@
 
 };
 
+} // namespace Nyq
+
 #endif
diff -wruN orig/nyquist/nyqstk/include/Function.h nyquist/nyqstk/include/Function.h
--- orig/nyquist/nyqstk/include/Function.h	2008-01-07 09:59:28.000000000 -0600
+++ nyquist/nyqstk/include/Function.h	2009-01-29 12:04:22.000000000 -0600
@@ -15,6 +15,9 @@
 #ifndef STK_FUNCTION_H
 #define STK_FUNCTION_H
 
+namespace Nyq
+{
+
 class Function : public Stk
 {
  public:
@@ -50,5 +53,7 @@
 
 };
 
+} // namespace Nyq
+
 #endif
 
diff -wruN orig/nyquist/nyqstk/include/Generator.h nyquist/nyqstk/include/Generator.h
--- orig/nyquist/nyqstk/include/Generator.h	2008-01-07 09:59:28.000000000 -0600
+++ nyquist/nyqstk/include/Generator.h	2009-01-29 12:04:22.000000000 -0600
@@ -14,6 +14,9 @@
 
 #include "Stk.h"
 
+namespace Nyq
+{
+
 class Generator : public Stk
 {
  public:
@@ -49,5 +52,7 @@
 
 };
 
+} // namespace Nyq
+
 #endif
 
diff -wruN orig/nyquist/nyqstk/include/Instrmnt.h nyquist/nyqstk/include/Instrmnt.h
--- orig/nyquist/nyqstk/include/Instrmnt.h	2008-01-07 09:30:38.000000000 -0600
+++ nyquist/nyqstk/include/Instrmnt.h	2009-01-29 12:04:22.000000000 -0600
@@ -14,6 +14,9 @@
 
 #include "Stk.h"
 
+namespace Nyq
+{
+
 class Instrmnt : public Stk
 {
  public:
@@ -67,4 +70,6 @@
 
 };
 
+} // namespace Nyq
+
 #endif
diff -wruN orig/nyquist/nyqstk/include/JCRev.h nyquist/nyqstk/include/JCRev.h
--- orig/nyquist/nyqstk/include/JCRev.h	2008-01-07 09:59:28.000000000 -0600
+++ nyquist/nyqstk/include/JCRev.h	2009-01-29 12:04:22.000000000 -0600
@@ -20,6 +20,9 @@
 #include "Effect.h"
 #include "Delay.h" 
 
+namespace Nyq
+{
+
 class JCRev : public Effect
 {
  public:
@@ -48,5 +51,7 @@
 
 };
 
+} // namespace Nyq
+
 #endif
 
diff -wruN orig/nyquist/nyqstk/include/JetTable.h nyquist/nyqstk/include/JetTable.h
--- orig/nyquist/nyqstk/include/JetTable.h	2008-01-07 09:59:28.000000000 -0600
+++ nyquist/nyqstk/include/JetTable.h	2009-01-29 12:04:22.000000000 -0600
@@ -18,6 +18,9 @@
 
 #include "Function.h"
 
+namespace Nyq
+{
+
 class JetTable : public Function
 {
 public:
@@ -33,4 +36,6 @@
 
 };
 
+} // namespace Nyq
+
 #endif
diff -wruN orig/nyquist/nyqstk/include/Mandolin.h nyquist/nyqstk/include/Mandolin.h
--- orig/nyquist/nyqstk/include/Mandolin.h	2008-01-07 09:59:28.000000000 -0600
+++ nyquist/nyqstk/include/Mandolin.h	2009-01-29 12:04:22.000000000 -0600
@@ -33,6 +33,9 @@
 #include "PluckTwo.h"
 #include "FileWvIn.h"
 
+namespace Nyq
+{
+
 class Mandolin : public PluckTwo
 {
  public:
@@ -67,4 +70,6 @@
   bool waveDone_;
 };
 
+} // namespace Nyq
+
 #endif
diff -wruN orig/nyquist/nyqstk/include/Modal.h nyquist/nyqstk/include/Modal.h
--- orig/nyquist/nyqstk/include/Modal.h	2008-01-07 09:59:28.000000000 -0600
+++ nyquist/nyqstk/include/Modal.h	2009-01-29 12:04:22.000000000 -0600
@@ -21,6 +21,9 @@
 #include "BiQuad.h"
 #include "OnePole.h"
 
+namespace Nyq
+{
+
 class Modal : public Instrmnt
 {
 public:
@@ -88,4 +91,6 @@
   StkFloat baseFrequency_;
 };
 
+} // namespace Nyq
+
 #endif
diff -wruN orig/nyquist/nyqstk/include/ModalBar.h nyquist/nyqstk/include/ModalBar.h
--- orig/nyquist/nyqstk/include/ModalBar.h	2008-01-07 09:59:28.000000000 -0600
+++ nyquist/nyqstk/include/ModalBar.h	2009-01-29 12:04:22.000000000 -0600
@@ -33,6 +33,9 @@
 
 #include "Modal.h"
 
+namespace Nyq
+{
+
 class ModalBar : public Modal
 {
 public:
@@ -58,4 +61,6 @@
   void controlChange(int number, StkFloat value);
 };
 
+} // namespace Nyq
+
 #endif
diff -wruN orig/nyquist/nyqstk/include/NRev.h nyquist/nyqstk/include/NRev.h
--- orig/nyquist/nyqstk/include/NRev.h	2008-01-07 09:59:28.000000000 -0600
+++ nyquist/nyqstk/include/NRev.h	2009-01-29 12:04:22.000000000 -0600
@@ -22,6 +22,9 @@
 #include "Effect.h" 
 #include "Delay.h" 
 
+namespace Nyq
+{
+
 class NRev : public Effect
 {
  public:
@@ -49,5 +52,7 @@
 
 };
 
+} // namespace Nyq
+
 #endif
 
diff -wruN orig/nyquist/nyqstk/include/Noise.h nyquist/nyqstk/include/Noise.h
--- orig/nyquist/nyqstk/include/Noise.h	2008-01-07 09:30:38.000000000 -0600
+++ nyquist/nyqstk/include/Noise.h	2009-01-29 12:04:22.000000000 -0600
@@ -15,6 +15,9 @@
 
 #include "Generator.h"
 
+namespace Nyq
+{
+
 class Noise : public Generator
 {
 public:
@@ -45,4 +48,6 @@
 
 };
 
+} // namespace Nyq
+
 #endif
diff -wruN orig/nyquist/nyqstk/include/OnePole.h nyquist/nyqstk/include/OnePole.h
--- orig/nyquist/nyqstk/include/OnePole.h	2008-01-07 09:59:28.000000000 -0600
+++ nyquist/nyqstk/include/OnePole.h	2009-01-29 12:04:22.000000000 -0600
@@ -17,6 +17,9 @@
 
 #include "Filter.h"
 
+namespace Nyq
+{
+
 class OnePole : protected Filter
 {
 public:
@@ -76,4 +79,6 @@
 
 };
 
+} // namespace Nyq
+
 #endif
diff -wruN orig/nyquist/nyqstk/include/OneZero.h nyquist/nyqstk/include/OneZero.h
--- orig/nyquist/nyqstk/include/OneZero.h	2008-01-07 09:30:38.000000000 -0600
+++ nyquist/nyqstk/include/OneZero.h	2009-01-29 12:04:22.000000000 -0600
@@ -17,6 +17,9 @@
 
 #include "Filter.h"
 
+namespace Nyq
+{
+
 class OneZero : protected Filter
 {
  public:
@@ -76,4 +79,6 @@
 
 };
 
+} // namespace Nyq
+
 #endif
diff -wruN orig/nyquist/nyqstk/include/PRCRev.h nyquist/nyqstk/include/PRCRev.h
--- orig/nyquist/nyqstk/include/PRCRev.h	2008-01-07 09:59:28.000000000 -0600
+++ nyquist/nyqstk/include/PRCRev.h	2009-01-29 12:04:22.000000000 -0600
@@ -20,6 +20,9 @@
 #include "Effect.h" 
 #include "Delay.h" 
 
+namespace Nyq
+{
+
 class PRCRev : public Effect
 {
 public:
@@ -46,5 +49,7 @@
 
 };
 
+} // namespace Nyq
+
 #endif
 
diff -wruN orig/nyquist/nyqstk/include/PitShift.h nyquist/nyqstk/include/PitShift.h
--- orig/nyquist/nyqstk/include/PitShift.h	2008-01-07 09:59:28.000000000 -0600
+++ nyquist/nyqstk/include/PitShift.h	2009-01-29 12:04:22.000000000 -0600
@@ -15,6 +15,9 @@
 #include "Effect.h" 
 #include "DelayL.h" 
 
+namespace Nyq
+{
+
 class PitShift : public Effect
 {
  public:
@@ -43,5 +46,7 @@
 
 };
 
+} // namespace Nyq
+
 #endif
 
diff -wruN orig/nyquist/nyqstk/include/PluckTwo.h nyquist/nyqstk/include/PluckTwo.h
--- orig/nyquist/nyqstk/include/PluckTwo.h	2008-01-07 09:59:28.000000000 -0600
+++ nyquist/nyqstk/include/PluckTwo.h	2009-01-29 12:04:22.000000000 -0600
@@ -26,6 +26,9 @@
 #include "DelayA.h"
 #include "OneZero.h"
 
+namespace Nyq
+{
+
 class PluckTwo : public Instrmnt
 {
  public:
@@ -82,4 +85,6 @@
 
 };
 
+} // namespace Nyq
+
 #endif
diff -wruN orig/nyquist/nyqstk/include/PoleZero.h nyquist/nyqstk/include/PoleZero.h
--- orig/nyquist/nyqstk/include/PoleZero.h	2008-01-08 13:15:25.000000000 -0600
+++ nyquist/nyqstk/include/PoleZero.h	2009-01-29 12:04:22.000000000 -0600
@@ -17,6 +17,9 @@
 
 #include "Filter.h"
 
+namespace Nyq
+{
+
 class PoleZero : protected Filter
 {
  public:
@@ -83,4 +86,6 @@
 
 };
 
+} // namespace Nyq
+
 #endif
diff -wruN orig/nyquist/nyqstk/include/ReedTable.h nyquist/nyqstk/include/ReedTable.h
--- orig/nyquist/nyqstk/include/ReedTable.h	2008-01-07 09:59:28.000000000 -0600
+++ nyquist/nyqstk/include/ReedTable.h	2009-01-29 12:04:22.000000000 -0600
@@ -22,6 +22,9 @@
 
 #include "Function.h"
 
+namespace Nyq
+{
+
 class ReedTable : public Function
 {
 public:
@@ -56,4 +59,6 @@
 
 };
 
+} // namespace Nyq
+
 #endif
diff -wruN orig/nyquist/nyqstk/include/SKINI.msg nyquist/nyqstk/include/SKINI.msg
--- orig/nyquist/nyqstk/include/SKINI.msg	2004-11-10 10:07:39.000000000 -0600
+++ nyquist/nyqstk/include/SKINI.msg	2009-01-29 12:04:22.000000000 -0600
@@ -11,6 +11,9 @@
 */
 /*********************************************************/
 
+namespace Nyq
+{
+
 /***** MIDI COMPATIBLE MESSAGES *****/
 /***** Status Bytes Have Channel=0 **/
 
@@ -121,4 +124,4 @@
 #define __SK_SINGER_RndVibAmt_       3008
 #define __SK_SINGER_VibFreq_         __SK_Expression_
 
-
+} // namespace Nyq
diff -wruN orig/nyquist/nyqstk/include/Saxofony.h nyquist/nyqstk/include/Saxofony.h
--- orig/nyquist/nyqstk/include/Saxofony.h	2008-01-07 09:30:38.000000000 -0600
+++ nyquist/nyqstk/include/Saxofony.h	2009-01-29 12:04:22.000000000 -0600
@@ -46,6 +46,9 @@
 #include "Noise.h"
 #include "SineWave.h"
 
+namespace Nyq
+{
+
 class Saxofony : public Instrmnt
 {
  public:
@@ -100,4 +103,6 @@
 
 };
 
+} // namespace Nyq
+
 #endif
diff -wruN orig/nyquist/nyqstk/include/SineWave.h nyquist/nyqstk/include/SineWave.h
--- orig/nyquist/nyqstk/include/SineWave.h	2008-01-07 09:59:28.000000000 -0600
+++ nyquist/nyqstk/include/SineWave.h	2009-01-29 12:04:22.000000000 -0600
@@ -16,10 +16,18 @@
 #ifndef STK_SINEWAVE_H
 #define STK_SINEWAVE_H
 
+namespace Nyq
+{
+
 const unsigned long TABLE_SIZE = 2048;
 
+} // namespace Nyq
+
 #include "Generator.h"
 
+namespace Nyq
+{
+
 class SineWave : public Generator
 {
 public:
@@ -77,4 +85,6 @@
 
 };
 
+} // namespace Nyq
+
 #endif
diff -wruN orig/nyquist/nyqstk/include/Sitar.h nyquist/nyqstk/include/Sitar.h
--- orig/nyquist/nyqstk/include/Sitar.h	2008-01-07 09:59:28.000000000 -0600
+++ nyquist/nyqstk/include/Sitar.h	2009-01-29 12:04:22.000000000 -0600
@@ -26,6 +26,9 @@
 #include "Noise.h"
 #include "ADSR.h"
 
+namespace Nyq
+{
+
 class Sitar : public Instrmnt
 {
  public:
@@ -66,5 +69,7 @@
 
 };
 
+} // namespace Nyq
+
 #endif
 
diff -wruN orig/nyquist/nyqstk/include/Stk.h nyquist/nyqstk/include/Stk.h
--- orig/nyquist/nyqstk/include/Stk.h	2008-01-07 09:30:38.000000000 -0600
+++ nyquist/nyqstk/include/Stk.h	2009-01-29 12:04:22.000000000 -0600
@@ -19,6 +19,9 @@
 #include <iostream>
 #include <sstream>
 
+namespace Nyq
+{
+
 // Most data in STK is passed and calculated with the
 // following user-definable floating-point type.  You
 // can change this to "float" if you prefer or perhaps
@@ -361,4 +364,6 @@
 
 //#define _STK_DEBUG_
 
+} // namespace Nyq
+
 #endif
diff -wruN orig/nyquist/nyqstk/include/WaveLoop.h nyquist/nyqstk/include/WaveLoop.h
--- orig/nyquist/nyqstk/include/WaveLoop.h	2008-01-07 09:30:39.000000000 -0600
+++ nyquist/nyqstk/include/WaveLoop.h	2009-01-29 12:04:22.000000000 -0600
@@ -21,6 +21,9 @@
 
 #include "FileWvIn.h"
 
+namespace Nyq
+{
+
 class WaveLoop : public FileWvIn
 {
 public:
@@ -89,4 +92,6 @@
 
 };
 
+} // namespace Nyq
+
 #endif
diff -wruN orig/nyquist/nyqstk/include/WvIn.h nyquist/nyqstk/include/WvIn.h
--- orig/nyquist/nyqstk/include/WvIn.h	2008-01-07 09:30:39.000000000 -0600
+++ nyquist/nyqstk/include/WvIn.h	2009-01-29 12:04:22.000000000 -0600
@@ -23,6 +23,9 @@
 #include "Stk.h"
 #include <vector>
 
+namespace Nyq
+{
+
 class WvIn : public Stk
 {
 public:
@@ -84,4 +87,6 @@
 
 };
 
+} // namespace Nyq
+
 #endif
diff -wruN orig/nyquist/nyqstk/instr.cpp nyquist/nyqstk/instr.cpp
--- orig/nyquist/nyqstk/instr.cpp	2008-01-07 09:30:36.000000000 -0600
+++ nyquist/nyqstk/instr.cpp	2009-01-29 12:24:45.000000000 -0600
@@ -11,6 +11,7 @@
 #include "stdlib.h"
 #include "string.h"
 
+using namespace Nyq;
 
 /* C interface to Instrmnt */
 
@@ -61,19 +62,19 @@
 }
 
 //! Start a note with the given frequency and amplitude.
-int noteOn(struct instr* in, MY_FLOAT frequency, MY_FLOAT amplitude) {
+int noteOn(struct instr* in, ::MY_FLOAT frequency, ::MY_FLOAT amplitude) {
 	in->instrObjPtr->noteOn(frequency, amplitude);
 	return 0;
 }
 
 //! Stop a note with the given amplitude (speed of decay).
-int noteOff(struct instr* in, MY_FLOAT amplitude) {
+int noteOff(struct instr* in, ::MY_FLOAT amplitude) {
 	in->instrObjPtr->noteOff(amplitude);
 	return 0;
 }
 
 //! Set instrument parameters for a particular frequency.
-int setFrequency(struct instr* in, MY_FLOAT frequency) {
+int setFrequency(struct instr* in, ::MY_FLOAT frequency) {
 	in->instrObjPtr->setFrequency(frequency);
 	return 0;
 }
@@ -86,7 +87,7 @@
 */
 
 //! Compute one output sample.
-MY_FLOAT tick(struct instr* in) {
+::MY_FLOAT tick(struct instr* in) {
 	return in->instrObjPtr->tick();
 }
 
@@ -97,8 +98,7 @@
 //}
 
 //! Perform the control change specified by \e number and \e value (0.0 - 128.0).
-int controlChange(struct instr* in, int number, MY_FLOAT value) {
+int controlChange(struct instr* in, int number, ::MY_FLOAT value) {
 	in->instrObjPtr->controlChange(number, value);
 	return 0;
 }
-
diff -wruN orig/nyquist/nyqstk/src/ADSR.cpp nyquist/nyqstk/src/ADSR.cpp
--- orig/nyquist/nyqstk/src/ADSR.cpp	2008-01-07 09:59:28.000000000 -0600
+++ nyquist/nyqstk/src/ADSR.cpp	2009-01-29 12:04:22.000000000 -0600
@@ -17,6 +17,8 @@
 
 #include "ADSR.h"
 
+using namespace Nyq;
+
 ADSR :: ADSR() : Envelope()
 {
   target_ = 0.0;
diff -wruN orig/nyquist/nyqstk/src/BandedWG.cpp nyquist/nyqstk/src/BandedWG.cpp
--- orig/nyquist/nyqstk/src/BandedWG.cpp	2008-01-07 09:59:28.000000000 -0600
+++ nyquist/nyqstk/src/BandedWG.cpp	2009-01-29 12:04:22.000000000 -0600
@@ -33,6 +33,8 @@
 #include "SKINI.msg"
 #include <cmath>
 
+using namespace Nyq;
+
 BandedWG :: BandedWG()
 {
   doPluck_ = true;
diff -wruN orig/nyquist/nyqstk/src/BiQuad.cpp nyquist/nyqstk/src/BiQuad.cpp
--- orig/nyquist/nyqstk/src/BiQuad.cpp	2008-01-07 09:59:28.000000000 -0600
+++ nyquist/nyqstk/src/BiQuad.cpp	2009-01-29 12:04:22.000000000 -0600
@@ -15,6 +15,8 @@
 #include "BiQuad.h"
 #include <cmath>
 
+using namespace Nyq;
+
 BiQuad :: BiQuad() : Filter()
 {
   std::vector<StkFloat> b(3, 0.0);
diff -wruN orig/nyquist/nyqstk/src/BowTable.cpp nyquist/nyqstk/src/BowTable.cpp
--- orig/nyquist/nyqstk/src/BowTable.cpp	2008-01-07 09:59:28.000000000 -0600
+++ nyquist/nyqstk/src/BowTable.cpp	2009-01-29 12:04:22.000000000 -0600
@@ -12,6 +12,8 @@
 #include "BowTable.h"
 #include <math.h>
 
+using namespace Nyq;
+
 BowTable :: BowTable()
 {
   offset_ = (StkFloat) 0.0;
diff -wruN orig/nyquist/nyqstk/src/Bowed.cpp nyquist/nyqstk/src/Bowed.cpp
--- orig/nyquist/nyqstk/src/Bowed.cpp	2008-01-07 09:59:28.000000000 -0600
+++ nyquist/nyqstk/src/Bowed.cpp	2009-01-29 12:04:22.000000000 -0600
@@ -24,6 +24,8 @@
 #include "Bowed.h"
 #include "SKINI.msg"
 
+using namespace Nyq;
+
 Bowed :: Bowed(StkFloat lowestFrequency)
 {
   unsigned long length;
diff -wruN orig/nyquist/nyqstk/src/Chorus.cpp nyquist/nyqstk/src/Chorus.cpp
--- orig/nyquist/nyqstk/src/Chorus.cpp	2008-01-07 09:59:28.000000000 -0600
+++ nyquist/nyqstk/src/Chorus.cpp	2009-01-29 12:04:22.000000000 -0600
@@ -11,6 +11,8 @@
 #include "Chorus.h"
 #include <iostream>
 
+using namespace Nyq;
+
 Chorus :: Chorus(StkFloat baseDelay)
 {
   delayLine_[0].setMaximumDelay( (unsigned long) (baseDelay * 1.414) + 2);
diff -wruN orig/nyquist/nyqstk/src/Clarinet.cpp nyquist/nyqstk/src/Clarinet.cpp
--- orig/nyquist/nyqstk/src/Clarinet.cpp	2008-01-07 09:30:39.000000000 -0600
+++ nyquist/nyqstk/src/Clarinet.cpp	2009-01-29 12:04:22.000000000 -0600
@@ -25,6 +25,8 @@
 #include "Clarinet.h"
 #include "SKINI.msg"
 
+using namespace Nyq;
+
 Clarinet :: Clarinet(StkFloat lowestFrequency)
 {
   length_ = (long) (Stk::sampleRate() / lowestFrequency + 1);
diff -wruN orig/nyquist/nyqstk/src/Delay.cpp nyquist/nyqstk/src/Delay.cpp
--- orig/nyquist/nyqstk/src/Delay.cpp	2008-01-07 09:30:39.000000000 -0600
+++ nyquist/nyqstk/src/Delay.cpp	2009-01-29 12:04:22.000000000 -0600
@@ -20,6 +20,8 @@
 
 #include "Delay.h"
 
+using namespace Nyq;
+
 Delay :: Delay() : Filter()
 {
   // Default maximum delay length set to 4095.
diff -wruN orig/nyquist/nyqstk/src/DelayA.cpp nyquist/nyqstk/src/DelayA.cpp
--- orig/nyquist/nyqstk/src/DelayA.cpp	2008-01-07 09:59:28.000000000 -0600
+++ nyquist/nyqstk/src/DelayA.cpp	2009-01-29 12:04:22.000000000 -0600
@@ -21,6 +21,8 @@
 
 #include "DelayA.h"
 
+using namespace Nyq;
+
 DelayA :: DelayA() : Delay()
 {
   this->setDelay( 0.5 );
diff -wruN orig/nyquist/nyqstk/src/DelayL.cpp nyquist/nyqstk/src/DelayL.cpp
--- orig/nyquist/nyqstk/src/DelayL.cpp	2008-01-07 09:30:39.000000000 -0600
+++ nyquist/nyqstk/src/DelayL.cpp	2009-01-29 12:04:22.000000000 -0600
@@ -24,6 +24,8 @@
 
 #include "DelayL.h"
 
+using namespace Nyq;
+
 DelayL :: DelayL() : Delay()
 {
   doNextOut_ = true;
diff -wruN orig/nyquist/nyqstk/src/Effect.cpp nyquist/nyqstk/src/Effect.cpp
--- orig/nyquist/nyqstk/src/Effect.cpp	2008-01-07 09:59:28.000000000 -0600
+++ nyquist/nyqstk/src/Effect.cpp	2009-01-29 12:04:22.000000000 -0600
@@ -12,6 +12,8 @@
 #include "Effect.h"
 #include <math.h>
 
+using namespace Nyq;
+
 Effect :: Effect()
 {
 }
diff -wruN orig/nyquist/nyqstk/src/Envelope.cpp nyquist/nyqstk/src/Envelope.cpp
--- orig/nyquist/nyqstk/src/Envelope.cpp	2008-01-07 09:30:39.000000000 -0600
+++ nyquist/nyqstk/src/Envelope.cpp	2009-01-29 12:04:22.000000000 -0600
@@ -15,6 +15,8 @@
 
 #include "Envelope.h"
 
+using namespace Nyq;
+
 Envelope :: Envelope(void) : Generator()
 {    
   target_ = 0.0;
diff -wruN orig/nyquist/nyqstk/src/FileRead.cpp nyquist/nyqstk/src/FileRead.cpp
--- orig/nyquist/nyqstk/src/FileRead.cpp	2008-01-07 09:59:28.000000000 -0600
+++ nyquist/nyqstk/src/FileRead.cpp	2009-01-29 12:04:22.000000000 -0600
@@ -32,8 +32,11 @@
 #include "FileRead.h"
 #include <sys/stat.h>
 #include <sys/types.h>
+#include <string.h>
 #include <cmath>
 
+using namespace Nyq;
+
 FileRead :: FileRead()
   : fd_(0)
 {
diff -wruN orig/nyquist/nyqstk/src/FileWvIn.cpp nyquist/nyqstk/src/FileWvIn.cpp
--- orig/nyquist/nyqstk/src/FileWvIn.cpp	2008-01-07 09:59:28.000000000 -0600
+++ nyquist/nyqstk/src/FileWvIn.cpp	2009-01-29 12:04:22.000000000 -0600
@@ -33,6 +33,8 @@
 #include "FileWvIn.h"
 #include <cmath>
 
+using namespace Nyq;
+
 FileWvIn :: FileWvIn( unsigned long chunkThreshold, unsigned long chunkSize )
   : finished_(true), interpolate_(false), time_(0.0),
     chunkThreshold_(chunkThreshold), chunkSize_(chunkSize)
diff -wruN orig/nyquist/nyqstk/src/Filter.cpp nyquist/nyqstk/src/Filter.cpp
--- orig/nyquist/nyqstk/src/Filter.cpp	2008-01-07 09:30:39.000000000 -0600
+++ nyquist/nyqstk/src/Filter.cpp	2009-01-29 12:04:22.000000000 -0600
@@ -30,6 +30,8 @@
 #include "Filter.h"
 #include <stdio.h>
 
+using namespace Nyq;
+
 Filter :: Filter()
 {
   // The default constructor should setup for pass-through.
diff -wruN orig/nyquist/nyqstk/src/Flute.cpp nyquist/nyqstk/src/Flute.cpp
--- orig/nyquist/nyqstk/src/Flute.cpp	2008-01-07 09:59:28.000000000 -0600
+++ nyquist/nyqstk/src/Flute.cpp	2009-01-29 12:04:22.000000000 -0600
@@ -25,6 +25,8 @@
 #include "Flute.h"
 #include "SKINI.msg"
 
+using namespace Nyq;
+
 Flute :: Flute(StkFloat lowestFrequency)
 {
   length_ = (unsigned long) (Stk::sampleRate() / lowestFrequency + 1);
diff -wruN orig/nyquist/nyqstk/src/Function.cpp nyquist/nyqstk/src/Function.cpp
--- orig/nyquist/nyqstk/src/Function.cpp	2008-01-07 09:59:28.000000000 -0600
+++ nyquist/nyqstk/src/Function.cpp	2009-01-29 12:04:22.000000000 -0600
@@ -12,6 +12,8 @@
 
 #include "Function.h"
 
+using namespace Nyq;
+
 Function :: Function() : Stk()
 {
   lastOutput_ = (StkFloat) 0.0;
diff -wruN orig/nyquist/nyqstk/src/Generator.cpp nyquist/nyqstk/src/Generator.cpp
--- orig/nyquist/nyqstk/src/Generator.cpp	2008-01-07 09:59:28.000000000 -0600
+++ nyquist/nyqstk/src/Generator.cpp	2009-01-29 12:04:22.000000000 -0600
@@ -11,6 +11,8 @@
 
 #include "Generator.h"
 
+using namespace Nyq;
+
 Generator :: Generator() : Stk()
 {
   lastOutput_ = 0.0;
diff -wruN orig/nyquist/nyqstk/src/Instrmnt.cpp nyquist/nyqstk/src/Instrmnt.cpp
--- orig/nyquist/nyqstk/src/Instrmnt.cpp	2008-01-07 09:30:39.000000000 -0600
+++ nyquist/nyqstk/src/Instrmnt.cpp	2009-01-29 12:04:22.000000000 -0600
@@ -11,6 +11,8 @@
 
 #include "Instrmnt.h"
 
+using namespace Nyq;
+
 Instrmnt :: Instrmnt()
 {
 }
diff -wruN orig/nyquist/nyqstk/src/JCRev.cpp nyquist/nyqstk/src/JCRev.cpp
--- orig/nyquist/nyqstk/src/JCRev.cpp	2008-01-07 09:59:28.000000000 -0600
+++ nyquist/nyqstk/src/JCRev.cpp	2009-01-29 12:04:22.000000000 -0600
@@ -17,6 +17,8 @@
 #include "JCRev.h"
 #include <math.h>
 
+using namespace Nyq;
+
 JCRev :: JCRev(StkFloat T60)
 {
   // Delay lengths for 44100 Hz sample rate.
diff -wruN orig/nyquist/nyqstk/src/JetTable.cpp nyquist/nyqstk/src/JetTable.cpp
--- orig/nyquist/nyqstk/src/JetTable.cpp	2008-01-07 09:59:28.000000000 -0600
+++ nyquist/nyqstk/src/JetTable.cpp	2009-01-29 12:04:22.000000000 -0600
@@ -15,6 +15,8 @@
 
 #include "JetTable.h"
 
+using namespace Nyq;
+
 JetTable :: JetTable() : Function()
 {
 }
diff -wruN orig/nyquist/nyqstk/src/Mandolin.cpp nyquist/nyqstk/src/Mandolin.cpp
--- orig/nyquist/nyqstk/src/Mandolin.cpp	2008-01-07 09:59:28.000000000 -0600
+++ nyquist/nyqstk/src/Mandolin.cpp	2009-01-29 12:04:22.000000000 -0600
@@ -30,6 +30,8 @@
 #include "Mandolin.h"
 #include "SKINI.msg"
 
+using namespace Nyq;
+
 Mandolin :: Mandolin(StkFloat lowestFrequency)
   : PluckTwo(lowestFrequency)
 {
diff -wruN orig/nyquist/nyqstk/src/Modal.cpp nyquist/nyqstk/src/Modal.cpp
--- orig/nyquist/nyqstk/src/Modal.cpp	2008-01-07 09:59:28.000000000 -0600
+++ nyquist/nyqstk/src/Modal.cpp	2009-01-29 12:04:22.000000000 -0600
@@ -12,6 +12,9 @@
 /***************************************************/
 
 #include "Modal.h"
+#include <stdlib.h>
+
+using namespace Nyq;
 
 Modal :: Modal(unsigned int modes)
   : nModes_(modes)
diff -wruN orig/nyquist/nyqstk/src/ModalBar.cpp nyquist/nyqstk/src/ModalBar.cpp
--- orig/nyquist/nyqstk/src/ModalBar.cpp	2008-01-07 09:59:28.000000000 -0600
+++ nyquist/nyqstk/src/ModalBar.cpp	2009-01-29 12:04:22.000000000 -0600
@@ -32,6 +32,8 @@
 #include "SKINI.msg"
 #include <cmath>
 
+using namespace Nyq;
+
 ModalBar :: ModalBar()
   : Modal()
 {
diff -wruN orig/nyquist/nyqstk/src/NRev.cpp nyquist/nyqstk/src/NRev.cpp
--- orig/nyquist/nyqstk/src/NRev.cpp	2008-01-07 09:59:29.000000000 -0600
+++ nyquist/nyqstk/src/NRev.cpp	2009-01-29 12:04:22.000000000 -0600
@@ -19,6 +19,8 @@
 #include "NRev.h"
 #include <math.h>
 
+using namespace Nyq;
+
 NRev :: NRev(StkFloat T60)
 {
   int lengths[15] = {1433, 1601, 1867, 2053, 2251, 2399, 347, 113, 37, 59, 53, 43, 37, 29, 19};
diff -wruN orig/nyquist/nyqstk/src/Noise.cpp nyquist/nyqstk/src/Noise.cpp
--- orig/nyquist/nyqstk/src/Noise.cpp	2008-01-07 09:30:39.000000000 -0600
+++ nyquist/nyqstk/src/Noise.cpp	2009-01-29 12:04:22.000000000 -0600
@@ -14,6 +14,8 @@
 #include <stdlib.h>
 #include <time.h>
 
+using namespace Nyq;
+
 Noise :: Noise() : Generator()
 {
   // Seed the random number generator with system time.
diff -wruN orig/nyquist/nyqstk/src/OnePole.cpp nyquist/nyqstk/src/OnePole.cpp
--- orig/nyquist/nyqstk/src/OnePole.cpp	2008-01-07 09:59:29.000000000 -0600
+++ nyquist/nyqstk/src/OnePole.cpp	2009-01-29 12:04:22.000000000 -0600
@@ -14,6 +14,8 @@
 
 #include "OnePole.h"
 
+using namespace Nyq;
+
 OnePole :: OnePole() : Filter()
 {
   std::vector<StkFloat> b(1, 0.1);
diff -wruN orig/nyquist/nyqstk/src/OneZero.cpp nyquist/nyqstk/src/OneZero.cpp
--- orig/nyquist/nyqstk/src/OneZero.cpp	2008-01-07 09:30:40.000000000 -0600
+++ nyquist/nyqstk/src/OneZero.cpp	2009-01-29 12:04:22.000000000 -0600
@@ -14,6 +14,8 @@
 
 #include "OneZero.h"
 
+using namespace Nyq;
+
 OneZero :: OneZero() : Filter()
 {
   std::vector<StkFloat> b(2, 0.5);
diff -wruN orig/nyquist/nyqstk/src/PRCRev.cpp nyquist/nyqstk/src/PRCRev.cpp
--- orig/nyquist/nyqstk/src/PRCRev.cpp	2008-01-07 09:59:29.000000000 -0600
+++ nyquist/nyqstk/src/PRCRev.cpp	2009-01-29 12:04:22.000000000 -0600
@@ -17,6 +17,8 @@
 #include "PRCRev.h"
 #include <math.h>
 
+using namespace Nyq;
+
 PRCRev :: PRCRev(StkFloat T60)
 {
   // Delay lengths for 44100 Hz sample rate.
diff -wruN orig/nyquist/nyqstk/src/PitShift.cpp nyquist/nyqstk/src/PitShift.cpp
--- orig/nyquist/nyqstk/src/PitShift.cpp	2008-01-07 09:59:29.000000000 -0600
+++ nyquist/nyqstk/src/PitShift.cpp	2009-01-29 12:04:22.000000000 -0600
@@ -12,6 +12,8 @@
 #include "PitShift.h"
 #include <cmath>
 
+using namespace Nyq;
+
 const int maxDelay = 5024;
 
 PitShift :: PitShift()
diff -wruN orig/nyquist/nyqstk/src/PluckTwo.cpp nyquist/nyqstk/src/PluckTwo.cpp
--- orig/nyquist/nyqstk/src/PluckTwo.cpp	2008-01-07 09:59:29.000000000 -0600
+++ nyquist/nyqstk/src/PluckTwo.cpp	2009-01-29 12:04:22.000000000 -0600
@@ -20,6 +20,8 @@
 
 #include "PluckTwo.h"
 
+using namespace Nyq;
+
 PluckTwo :: PluckTwo(StkFloat lowestFrequency)
 {
   length_ = (unsigned long) (Stk::sampleRate() / lowestFrequency + 1);
diff -wruN orig/nyquist/nyqstk/src/PoleZero.cpp nyquist/nyqstk/src/PoleZero.cpp
--- orig/nyquist/nyqstk/src/PoleZero.cpp	2008-01-07 09:59:29.000000000 -0600
+++ nyquist/nyqstk/src/PoleZero.cpp	2009-01-29 12:04:22.000000000 -0600
@@ -14,6 +14,8 @@
 
 #include "PoleZero.h"
 
+using namespace Nyq;
+
 PoleZero :: PoleZero() : Filter()
 {
   // Default setting for pass-through.
diff -wruN orig/nyquist/nyqstk/src/ReedTable.cpp nyquist/nyqstk/src/ReedTable.cpp
--- orig/nyquist/nyqstk/src/ReedTable.cpp	2008-01-07 09:59:29.000000000 -0600
+++ nyquist/nyqstk/src/ReedTable.cpp	2009-01-29 12:04:22.000000000 -0600
@@ -19,6 +19,8 @@
 
 #include "ReedTable.h"
 
+using namespace Nyq;
+
 ReedTable :: ReedTable()
 {
   offset_ = (StkFloat) 0.6;  // Offset is a bias, related to reed rest position.
diff -wruN orig/nyquist/nyqstk/src/Saxofony.cpp nyquist/nyqstk/src/Saxofony.cpp
--- orig/nyquist/nyqstk/src/Saxofony.cpp	2008-01-07 09:30:40.000000000 -0600
+++ nyquist/nyqstk/src/Saxofony.cpp	2009-01-29 12:04:22.000000000 -0600
@@ -38,6 +38,8 @@
 #include "Saxofony.h"
 #include "SKINI.msg"
 
+using namespace Nyq;
+
 Saxofony :: Saxofony(StkFloat lowestFrequency)
 {
   length_ = (unsigned long) (Stk::sampleRate() / lowestFrequency + 1);
diff -wruN orig/nyquist/nyqstk/src/SineWave.cpp nyquist/nyqstk/src/SineWave.cpp
--- orig/nyquist/nyqstk/src/SineWave.cpp	2008-01-07 09:59:29.000000000 -0600
+++ nyquist/nyqstk/src/SineWave.cpp	2009-01-29 12:04:23.000000000 -0600
@@ -16,6 +16,8 @@
 #include "SineWave.h"
 #include <cmath>
 
+using namespace Nyq;
+
 StkFrames SineWave :: table_;
 
 SineWave :: SineWave( void )
diff -wruN orig/nyquist/nyqstk/src/Sitar.cpp nyquist/nyqstk/src/Sitar.cpp
--- orig/nyquist/nyqstk/src/Sitar.cpp	2008-01-07 09:59:29.000000000 -0600
+++ nyquist/nyqstk/src/Sitar.cpp	2009-01-29 12:04:23.000000000 -0600
@@ -20,6 +20,8 @@
 #include "Sitar.h"
 #include <math.h>
 
+using namespace Nyq;
+
 Sitar :: Sitar(StkFloat lowestFrequency)
 {
   unsigned long length = (unsigned long) (Stk::sampleRate() / lowestFrequency + 1);
diff -wruN orig/nyquist/nyqstk/src/Stk.cpp nyquist/nyqstk/src/Stk.cpp
--- orig/nyquist/nyqstk/src/Stk.cpp	2008-01-07 09:30:40.000000000 -0600
+++ nyquist/nyqstk/src/Stk.cpp	2009-01-29 12:04:23.000000000 -0600
@@ -13,6 +13,9 @@
 /***************************************************/
 
 #include "Stk.h"
+#include <stdlib.h>
+
+using namespace Nyq;
 
 StkFloat Stk :: srate_ = (StkFloat) SRATE;
 std::string Stk :: rawwavepath_ = RAWWAVE_PATH;
diff -wruN orig/nyquist/nyqstk/src/WaveLoop.cpp nyquist/nyqstk/src/WaveLoop.cpp
--- orig/nyquist/nyqstk/src/WaveLoop.cpp	2008-01-07 09:30:40.000000000 -0600
+++ nyquist/nyqstk/src/WaveLoop.cpp	2009-01-29 12:04:23.000000000 -0600
@@ -19,6 +19,8 @@
 #include "WaveLoop.h"
 #include <cmath>
 
+using namespace Nyq;
+
 WaveLoop :: WaveLoop( unsigned long chunkThreshold, unsigned long chunkSize )
   : FileWvIn( chunkThreshold, chunkSize ), phaseOffset_(0.0)
 {
diff -wruN orig/nyquist/nyqstk/src/WvIn.cpp nyquist/nyqstk/src/WvIn.cpp
--- orig/nyquist/nyqstk/src/WvIn.cpp	2008-01-07 09:30:40.000000000 -0600
+++ nyquist/nyqstk/src/WvIn.cpp	2009-01-29 12:04:23.000000000 -0600
@@ -20,6 +20,8 @@
 #include "WvIn.h"
 #include <cmath>
 
+using namespace Nyq;
+
 WvIn :: WvIn()
 {
 }
diff -wruN orig/nyquist/nyqstk/stkinit.cpp nyquist/nyqstk/stkinit.cpp
--- orig/nyquist/nyqstk/stkinit.cpp	2008-01-07 09:30:37.000000000 -0600
+++ nyquist/nyqstk/stkinit.cpp	2009-01-29 12:24:45.000000000 -0600
@@ -16,6 +16,8 @@
 }
 #endif
 
+using namespace Nyq;
+
 const char *rawwave_path = NULL;
 
 extern "C" void stk_init()
diff -wruN orig/nyquist/nyqstk/stkint.cpp nyquist/nyqstk/stkint.cpp
--- orig/nyquist/nyqstk/stkint.cpp	2008-01-07 09:59:27.000000000 -0600
+++ nyquist/nyqstk/stkint.cpp	2009-01-29 12:24:45.000000000 -0600
@@ -8,13 +8,15 @@
 #include "JCRev.h"
 #include "PRCRev.h"
 
+using namespace Nyq;
+
 // Reverb Effects ==========================================================
 
 struct stkEffect {
   Effect * effectPtr;
 };
 
-struct stkEffect *initStkEffect(int eff_type, StkFloat trev, int sample_rate) {
+struct stkEffect *initStkEffect(int eff_type, ::StkFloat trev, int sample_rate) {
   struct stkEffect * eff = (struct stkEffect *) malloc(sizeof(struct stkEffect));
   Stk::setSampleRate(sample_rate);
   switch(eff_type) {
@@ -39,11 +41,11 @@
   return 0;
 }
 
-StkFloat stkEffectTick(struct stkEffect * eff, StkFloat s) {
+::StkFloat stkEffectTick(struct stkEffect * eff, ::StkFloat s) {
   return eff->effectPtr->tick(s);
 }
 
-void stkEffectSetMix (struct stkEffect * eff, StkFloat mix) {
+void stkEffectSetMix (struct stkEffect * eff, ::StkFloat mix) {
   eff->effectPtr->setEffectMix(mix);
 }
 
@@ -51,7 +53,7 @@
 
 #include "PitShift.h"
 
-struct stkEffect *initStkPitShift(StkFloat shift, int sample_rate) {
+struct stkEffect *initStkPitShift(::StkFloat shift, int sample_rate) {
   PitShift * ps;
   ps = new PitShift();
   ps->setShift(shift);
@@ -65,7 +67,7 @@
 
 #include "Chorus.h"
 
-struct stkEffect *initStkChorus(StkFloat baseDelay, StkFloat depth, StkFloat freq, int sample_rate) {
+struct stkEffect *initStkChorus(::StkFloat baseDelay, ::StkFloat depth, ::StkFloat freq, int sample_rate) {
   Chorus * ch;
   ch = new Chorus(baseDelay);
   ch->setModDepth(depth);
diff -wruN orig/nyquist/xlisp/xldmem.c nyquist/xlisp/xldmem.c
--- orig/nyquist/xlisp/xldmem.c	2009-01-12 10:20:16.000000000 -0600
+++ nyquist/xlisp/xldmem.c	2009-02-23 11:01:01.000000000 -0600
@@ -299,8 +299,6 @@
 LOCAL void findmem(void)
 {
     gc();
-    if (nfree < (long)anodes)
-        addseg();
 }
 
 /* gc - garbage collect (only called here and in xlimage.c) */
@@ -346,6 +344,10 @@
     /* count the gc call */
     ++gccalls;
 
+    /* add a new segment if still no free nodes */
+    if (nfree < (long)anodes)
+        addseg();
+
     /* call the *gc-hook* if necessary */
     if (s_gchook && (fun = getvalue(s_gchook))) {
         newfp = xlsp;
diff -wruN orig/nyquist/xlisp/xlisp.h nyquist/xlisp/xlisp.h
--- orig/nyquist/xlisp/xlisp.h	2008-01-19 09:38:51.000000000 -0600
+++ nyquist/xlisp/xlisp.h	2009-02-22 05:14:48.000000000 -0600
@@ -159,7 +159,7 @@
 #define OFFTYPE long
 #define NIL (void *)0
 #define SAVERESTORE
-#include <endian.h>
+#include <sys/types.h>
 /* #if __BYTE_ORDER == __LITTLE_ENDIAN */
 #if defined(__LITTLE_ENDIAN__)
 #define XL_LITTLE_ENDIAN
